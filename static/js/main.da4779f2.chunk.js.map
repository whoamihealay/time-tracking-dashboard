{"version":3,"sources":["assets/icon-ellipsis.svg","components/Card.js","assets/image-jeremy.png","components/Button.js","components/Profile.js","App.js","index.js"],"names":["Card","info","data","resetGenTime","genTime","useState","time","setTime","className","timeframes","daily","current","previous","weekly","monthly","cardStyle","backgroundImage","background","icon","backgroundColor","color","style","title","onClick","src","ellipsis","alt","Button","text","defaultProps","Profile","dailyBtn","weeklyBtn","monthlyBtn","jeremy","App","setData","timeframe","setTimeframe","setDailybtn","setWeeklybtn","setMonthlybtn","getData","a","axios","get","res","reset","useEffect","map","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da4779f2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-ellipsis.a57a4ac8.svg\";","import React, { useState } from \"react\";\nimport \"./card.css\";\nimport ellipsis from \"../assets/icon-ellipsis.svg\";\n\nconst Card = ({ data, resetGenTime, genTime }) => {\n  const [time, setTime] = useState(\"daily\");\n  let info;\n\n  if (genTime !== \"\" && genTime !== time) {\n    setTime(genTime);\n  }\n\n  if (time === \"daily\") {\n    info = (\n      <div className=\"times grid\">\n        <p className=\"text-left fs-600 fw-300 current\">\n          {data.timeframes.daily.current}hrs\n        </p>\n        <p className=\"text-light fs-200 text-right previous\">\n          Yesterday - {data.timeframes.daily.previous}hrs\n        </p>\n      </div>\n    );\n  } else if (time === \"weekly\") {\n    info = (\n      <div className=\"times grid\">\n        <p className=\"text-left fs-600 fw-300 current\">\n          {data.timeframes.weekly.current}hrs\n        </p>\n        <p className=\"text-light fs-200 text-right previous\">\n          Last week - {data.timeframes.weekly.previous}hrs\n        </p>\n      </div>\n    );\n  } else if (time === \"monthly\") {\n    info = (\n      <div className=\"times grid\">\n        <p className=\"text-left fs-600 fw-300 current\">\n          {data.timeframes.monthly.current}hrs\n        </p>\n        <p className=\"text-light fs-200 text-right previous\">\n          Last month - {data.timeframes.monthly.previous}hrs\n        </p>\n      </div>\n    );\n  } else {\n    info = <div></div>;\n  }\n\n  const cardBtn = () => {\n    resetGenTime();\n    if (time === \"daily\") {\n      setTime(\"weekly\");\n    } else if (time === \"weekly\") {\n      setTime(\"monthly\");\n    } else if (time === \"monthly\") {\n      setTime(\"daily\");\n    }\n  };\n\n  const cardStyle = {\n    backgroundImage: `url(${data.background.icon})`,\n    backgroundColor: `${data.background.color}`,\n  };\n\n  return (\n    <>\n      <div className=\"card flex\" style={cardStyle}>\n        <div className=\"card-info grid\">\n          <p className=\"fw-500 text-left title\">{data.title}</p>\n          <button className=\"btn btn-size\" onClick={cardBtn}>\n            <img src={ellipsis} alt=\"change timeframe\" className=\"link\" />\n          </button>\n          {info}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/image-jeremy.71cd41f1.png\";","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ text, onClick, color }) => {\n  return (\n    <button onClick={onClick} className=\"btn\" style={{ color: color }}>\n      {text}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  text: \"\",\n};\n\nButton.propTypes = {\n  text: PropTypes.string,\n};\n\nexport default Button;\n","import React from \"react\";\n\nimport jeremy from \"../assets/image-jeremy.png\";\nimport \"./profile.css\";\nimport Button from \"./Button\";\n\nconst Profile = ({\n  daily,\n  weekly,\n  monthly,\n  dailyBtn,\n  weeklyBtn,\n  monthlyBtn,\n}) => {\n  return (\n    <div className=\"profile flex bg-dark\">\n      <div className=\"profile-upper flex bg-blue\">\n        <img src={jeremy} alt=\"Jeremy\" />\n        <div className=\"profile-name flex\">\n          <p className=\"text-light fs-200\">Report for</p>\n          <p className=\"name fs-500 fw-300\">Jeremy Robson</p>\n        </div>\n      </div>\n      <div className=\"btn-div flex\">\n        <Button text=\"Daily\" onClick={daily} color={dailyBtn} />\n        <Button text=\"Weekly\" onClick={weekly} color={weeklyBtn} />\n        <Button text=\"Monthly\" onClick={monthly} color={monthlyBtn} />\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport \"./App.css\";\nimport Card from \"./components/Card\";\nimport Profile from \"./components/Profile\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [timeframe, setTimeframe] = useState(\"\");\n  const [dailyBtn, setDailybtn] = useState(\"white\");\n  const [weeklyBtn, setWeeklybtn] = useState(\"\");\n  const [monthlyBtn, setMonthlybtn] = useState(\"\");\n\n  const getData = async () => {\n    const res = await axios.get(\"/time-tracking-dashboard/data.json\");\n    setData(res.data);\n  };\n\n  const daily = () => {\n    setTimeframe(\"daily\");\n    setDailybtn(\"white\");\n    setWeeklybtn(\"\");\n    setMonthlybtn(\"\");\n  };\n\n  const weekly = () => {\n    setTimeframe(\"weekly\");\n    setDailybtn(\"\");\n    setWeeklybtn(\"white\");\n    setMonthlybtn(\"\");\n  };\n  const monthly = () => {\n    setTimeframe(\"monthly\");\n    setDailybtn(\"\");\n    setWeeklybtn(\"\");\n    setMonthlybtn(\"white\");\n  };\n\n  const reset = () => {\n    setTimeframe(\"\");\n    setDailybtn(\"\");\n    setWeeklybtn(\"\");\n    setMonthlybtn(\"\");\n  };\n\n  useEffect(() => {\n    getData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <div className=\"App container flex\">\n        <Profile\n          daily={daily}\n          weekly={weekly}\n          monthly={monthly}\n          dailyBtn={dailyBtn}\n          weeklyBtn={weeklyBtn}\n          monthlyBtn={monthlyBtn}\n        />\n        {data.map((data) => (\n          <Card\n            key={data.id}\n            data={data}\n            resetGenTime={reset}\n            genTime={timeframe}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}